-> React is a library that helps us build user interfaces from components.
-> We can assemble smaller components to build large applications.

COMPONENTS 
-> components combine HTML and logic into a single reusable function.

JSX
-> JSX is a syntax extension for javascript.
-> It allows us to write markup that looks like HTML directly inside of JS
-> It's not legal JS on its own, so it must be transpiled.


Rules of JSX
-> Must explicitly close self closing elements like <br/>
-> components can only return a single element. 

React Fragment
->  <> </>

Props
-> Props are like arguments that we can provide to our components.
-> We use props to make configurable components.

key Props
-> In React, the key prop is a special attribute that you must 
include when rendering a list of elements, especially in loops like .map().

-> The key prop helps React identify which items have changed, 
been added, or removed. It makes the reconciliation process faster 
and more efficient.


State
-> Often, you’ll want your component to “remember” some information and 
display it. For example, maybe you want to count the number of times a 
button is clicked. To do this, add state to your component.

what goes in state?
-> Data fetched from an API 
-> Form Information 
-> A variable that "decides whether something is showing or hidden
-> ask yourself: "Will this ever change?"
    -> if so, it should go in state somewhere.

-> you must call useState inside component
-> Each component will get its own state.